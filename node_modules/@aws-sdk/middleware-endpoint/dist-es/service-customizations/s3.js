import { __awaiter, __generator } from "tslib";
export var resolveParamsForS3 = function (endpointParams) { return __awaiter(void 0, void 0, void 0, function () {
    var bucket;
    return __generator(this, function (_a) {
        bucket = (endpointParams === null || endpointParams === void 0 ? void 0 : endpointParams.Bucket) || "";
        if (!isDnsCompatibleBucketName(bucket) || bucket.indexOf(".") !== -1) {
            endpointParams.ForcePathStyle = true;
        }
        return [2, endpointParams];
    });
}); };
var DOMAIN_PATTERN = /^[a-z0-9][a-z0-9\.\-]{1,61}[a-z0-9]$/;
var IP_ADDRESS_PATTERN = /(\d+\.){3}\d+/;
var DOTS_PATTERN = /\.\./;
export var DOT_PATTERN = /\./;
export var S3_HOSTNAME_PATTERN = /^(.+\.)?s3(-fips)?(\.dualstack)?[.-]([a-z0-9-]+)\./;
export var isDnsCompatibleBucketName = function (bucketName) {
    return DOMAIN_PATTERN.test(bucketName) && !IP_ADDRESS_PATTERN.test(bucketName) && !DOTS_PATTERN.test(bucketName);
};
